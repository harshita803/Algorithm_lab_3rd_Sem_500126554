#include <stdio.h>
#include <string.h>

#define d 256 
#define q 101 


void rabinKarpSearch(char *text, char *pattern) {
    int m = strlen(pattern);
    int n = strlen(text);
    int i, j;
    int patternHash = 0;   
    int textHash = 0;      
    int h = 1;             


    for (i = 0; i < m - 1; i++) {
        h = (h * d) % q;
    }

    
    for (i = 0; i < m; i++) {
        patternHash = (d * patternHash + pattern[i]) % q;
        textHash = (d * textHash + text[i]) % q;
    }

    
    for (i = 0; i <= n - m; i++) {
        
        if (patternHash == textHash) {
            
            for (j = 0; j < m; j++) {
                if (text[i + j] != pattern[j]) {
                    break;
                }
            }
            
            if (j == m) {
                printf("Pattern found at index %d\n", i);
            }
        }

        if (i < n - m) {
            textHash = (d * (textHash - text[i] * h) + text[i + m]) % q;
           
            if (textHash < 0) {
                textHash = (textHash + q);
            }
        }
    }
}

int main() {
    char text[] = "ABCCBAABCABC";
    char pattern[] = "ABC";

    rabinKarpSearch(text, pattern);

    return 0;
}
